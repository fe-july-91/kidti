{"ast":null,"code":"export const getAgeAtVaccination=(vaccDate,birthDate)=>{// Преобразуем строки в объекты Date\nconst[birthDay,birthMonth,birthYear]=birthDate.split('.').map(Number);const birth=new Date(birthYear,birthMonth-1,birthDay);// Месяцы считаются с 0\nconst[vaccDay,vaccMonth,vaccYear]=vaccDate.split('.').map(Number);const vaccination=new Date(vaccYear,vaccMonth-1,vaccDay);if(isNaN(birth.getTime())||isNaN(vaccination.getTime())){console.error('Invalid date provided');return'Invalid date';}// Вычисляем возраст\nlet ageYears=vaccination.getFullYear()-birth.getFullYear();let ageMonths=vaccination.getMonth()-birth.getMonth();// Корректируем, если месяцы отрицательны\nif(ageMonths<0){ageYears--;ageMonths+=12;}return`${ageYears}p${ageMonths}м`;};","map":{"version":3,"names":["getAgeAtVaccination","vaccDate","birthDate","birthDay","birthMonth","birthYear","split","map","Number","birth","Date","vaccDay","vaccMonth","vaccYear","vaccination","isNaN","getTime","console","error","ageYears","getFullYear","ageMonths","getMonth"],"sources":["/Users/mariashmakova/Projects/personal/kidti/src/Shared/hendlers/VactinationAge.js"],"sourcesContent":["export const getAgeAtVaccination = (vaccDate, birthDate) => {\n  // Преобразуем строки в объекты Date\n  const [birthDay, birthMonth, birthYear] = birthDate.split('.').map(Number);\n  const birth = new Date(birthYear, birthMonth - 1, birthDay); // Месяцы считаются с 0\n\n  const [vaccDay, vaccMonth, vaccYear] = vaccDate.split('.').map(Number);\n  const vaccination = new Date(vaccYear, vaccMonth - 1, vaccDay);\n\n  if (isNaN(birth.getTime()) || isNaN(vaccination.getTime())) {\n    console.error('Invalid date provided');\n    return 'Invalid date';\n  }\n\n  // Вычисляем возраст\n  let ageYears = vaccination.getFullYear() - birth.getFullYear();\n  let ageMonths = vaccination.getMonth() - birth.getMonth();\n\n  // Корректируем, если месяцы отрицательны\n  if (ageMonths < 0) {\n    ageYears--;\n    ageMonths += 12;\n  }\n\n  return `${ageYears}p${ageMonths}м`;\n};\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,mBAAmB,CAAGA,CAACC,QAAQ,CAAEC,SAAS,GAAK,CAC1D;AACA,KAAM,CAACC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,CAAC,CAAGH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAC1E,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAACL,SAAS,CAAED,UAAU,CAAG,CAAC,CAAED,QAAQ,CAAC,CAAE;AAE7D,KAAM,CAACQ,OAAO,CAAEC,SAAS,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CACtE,KAAM,CAAAM,WAAW,CAAG,GAAI,CAAAJ,IAAI,CAACG,QAAQ,CAAED,SAAS,CAAG,CAAC,CAAED,OAAO,CAAC,CAE9D,GAAII,KAAK,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC,EAAID,KAAK,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAE,CAC1DC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC,CACtC,MAAO,cAAc,CACvB,CAEA;AACA,GAAI,CAAAC,QAAQ,CAAGL,WAAW,CAACM,WAAW,CAAC,CAAC,CAAGX,KAAK,CAACW,WAAW,CAAC,CAAC,CAC9D,GAAI,CAAAC,SAAS,CAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC,CAAGb,KAAK,CAACa,QAAQ,CAAC,CAAC,CAEzD;AACA,GAAID,SAAS,CAAG,CAAC,CAAE,CACjBF,QAAQ,EAAE,CACVE,SAAS,EAAI,EAAE,CACjB,CAEA,MAAO,GAAGF,QAAQ,IAAIE,SAAS,GAAG,CACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}